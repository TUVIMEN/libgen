#!/bin/sh
# by TUVIMEN <suchora.dominik7@gmail.com>
# License: GNU GPLv3

sby_def="def"
sby_title="title"
sby_author="author"
sby_series="series"
sby_publisher="publisher"
sby_year="year"
sby_isbn="identifier"
sby_language="language"
sby_md5="md5"
sby_tags="tags"
sby_extension="extension"

by_id="id"
by_title="title"
by_publisher="publisher"
by_year="year"
by_pages="pages"
by_language="language"
by_size="filesize"
by_extension="extension"

SEARCHBY="$sby_def"
PAGE=1
REVERSE="DESC"
SEARCH=""
DOMAIN="https://libgen.st"
DELIM="\t"
RESULTS=25
FORMAT=""
TYPE=0
MASK=1
ORDERBY=""

C_DOI="32"
C_SIZE="33"
C_EXTENSION="34"
C_AUTHOR="35"
C_TIME="31"
C_PAGES="32"
C_VOLUME="34"
C_TITLE="39"
COLOR=1

while [ $# -gt 0 ]
do
  case "$1" in
    -s|--search-by)
      case "$2" in
        def) SEARCHBY=$sby_def;;
        title) SEARCHBY=$sby_title;;
        author) SEARCHBY=$sby_author;;
        series) SEARCHBY=$sby_series;;
        publisher) SEARCHBY=$sby_publisher;;
        year) SEARCHBY=$sby_year;;
        isbn) SEARCHBY=$sby_isbn;;
        language) SEARCHBY=$sby_language;;
        md5) SEARCHBY=$sby_md5;;
        tags) SEARCHBY=$sby_tags;;
        extension) SEARCHBY=$sby_extension;;
      esac
      shift;;
    -o|--order-by)
      case "$2" in
        id) ORDERBY=$by_id;;
        title) ORDERBY=$by_title;;
        publisher) ORDERBY=$by_publisher;;
        year) ORDERBY=$by_year;;
        pages) ORDERBY=$by_pages;;
        language) ORDERBY=$by_language;;
        size) ORDERBY=$by_size;;
        extension) ORDERBY=$by_extension;;
      esac
      shift;;
    -h|--help)
        NAME="$(basename "$0")"
        printf "%s [OPTION]... [PATTERN]\nSearch for PATTERN in libgen.\nExample: %s -o size -s title -p 1 'industrial society and its future'\n\n" "$NAME" "$NAME"
        printf "Options:\n  -o,  --order-by TYPE\t\tsort using TYPE, that can be: id,title,publisher,year,pages,language,size,extension\n"
        printf "  -d,  --domain DOMAIN\t\tset domain to DOMAIN\n"
        printf "  -D,  --delimiter DELIM\tset delimiter to DELIM\n"
        printf "  -s,  --search-by TYPE\t\tsearch by TYPE, that can be: def,title,author,series,publisher,year,isbn,language,md5,tags,extension\n"
        printf "  -r,  --reverse NUM\t\tsort in reverse\n"
        printf "  -f,  --format FORMAT\t\tspecify file format for results\n"
        printf "  -m,  --mask\t\t\tuse wildcards for PATTERN\n"
        printf "  -p,  --page NUM\t\tshow page at NUM\n"
        printf "  -R,  --results NUM\t\tshow NUM results\n"
        printf "  -T,  --non-fiction\t\tsearch non-fiction tab\n"
        printf "  -S,  --science\t\tsearch scientific articles tab\n"
        printf "  -F,  --fiction\t\tsearch fiction tab\n"
        printf "  -c,  --color\t\t\tcolor output\n"
        printf "  -C,  --no-color\t\tdisable coloring of output\n"
        printf "  -h,  --help\t\t\tshow help\n"
        printf "\nLink will be copied via xclip.\n"
        exit 0;;
    -r|--reverse)
        REVERSE="ASC";;
    -f|--format)
        FORMAT="$2"
        shift;;
    -m|--mask)
        MASK=0;;
    -d|--domain)
        DOMAIN="$2"
        shift;;
    -D|--delimiter)
        DELIM="$2"
        shift;;
    -R|--results)
        RESULTS="$2"
        shift;;
    -p|--page)
        PAGE="$2"
        shift;;
    -T|--non-fiction)
        TYPE=0;;
    -F|--fiction)
        TYPE=1;;
    -S|--science)
        TYPE=2;;
    -c|--color)
        COLOR=1;;
    -C|--no-color)
        COLOR=0;;
    *)
      SEARCH="$1";;
  esac
      shift
done

SEARCHP=$(echo "$SEARCH" | tr ' ' '+')

t1="$(mktemp)"
links="$(mktemp)"
title="$(mktemp)"
size="$(mktemp)"
author="$(mktemp)"
extension="$(mktemp)"
trap 'rm "$t1" "$title" "$size" "$author" "$extension" "$links"' EXIT

color_lines() {
    sed "s/^/\x1b[$1m/; s/$/\x1b[0m/" "$2" > "$3"
    cp "$3" "$2"
}

case $TYPE in
    0)
        pages="$(mktemp)"
        year="$(mktemp)"
        trap 'rm "$pages" "$year"' EXIT
        curl -s "$DOMAIN/search.php?req=$SEARCHP&open=0&res=$RESULTS&view=detailed&phrase=$MASK&column=$SORT&page=$PAGE&sort=$ORDERBY&sortmode=$REVERSE" | hgrep 'table +rules="cols" +width="100%" +border="0"; tr /[-]/[2]' > "$t1"
        hgrep 'td +colspan="2"; a @p"%i\n"' "$t1" > "$title"
        sed -E '/<td><font color="gray">Pages:<\/font><\/td>/{N; s/[^0-9]+([0-9]+).*/Pages:\1/}; /^Pages:/!d; s/^Pages://' "$t1" > "$pages"
        sed -E '/<td><font color="gray">Size:<\/font><\/td>/{N; s/[^0-9]+([0-9]+.*) \([0-9]+\).*/Size:\1/}; /^Size:/!d; s/^Size://' "$t1" > "$size"
        hgrep 'td +colspan="3"; b @p"%i\n"' "$t1" | sed -E "s/<a href=?(\"|')[^\"']+?(\"|')>//g; s/<\/a>//g; s/, /,/g" > "$author"
        sed -E '/<td><font color="gray">Year:<\/font><\/td>/{N; s/[^0-9]+?(([0-9]+)|.*).*/Year:\1/}; /^Year:/!d; s/^Year://' "$t1" > "$year"
        sed -E '/<td><font color="gray">Extension:<\/font><\/td>/{N; s/.*>([a-zA-Z0-9]+).*/Extension:\1/}; /^Extension:/!d; s/^Extension://' "$t1" > "$extension"
        hgrep 'td +colspan="2"' "$t1" | grep -oE '\?md5=[A-Z0-9]+' | sed 's/^\?md5=/http:\/\/library.lol\/main\//' > "$links"

        if [ "$COLOR" -eq 1 ]
        then
            color_lines "$C_SIZE" "$size" "$t1"
            color_lines "$C_PAGES" "$pages" "$t1"
            color_lines "$C_TITLE" "$title" "$t1"
            color_lines "$C_EXTENSION" "$extension" "$t1"
            color_lines "$C_AUTHOR" "$author" "$t1"
            color_lines "$C_TIME" "$year" "$t1"
        fi
        paste -d "$DELIM" "$title" "$pages" "$size" "$year" "$author" "$extension" | recode html..UTF-8 | nl
        ;;
    1)
        [ "$SEARCHBY" = "$sby_def" ] && SEARCHBY=""
        [ "$MASK" -eq 1 ] && MASK=0 || MASK=1

        curl -s "$DOMAIN/fiction/?q=$SEARCHP&criteria=$SORT&format=$FORMAT&page=$PAGE" | hgrep 'tbody; tr' > "$t1"
        hgrep 'ul +class="catalog_authors" @p"%i\n"' "$t1" | sed -E "s/\t//g; /^$/d; s/^<li>//g; s/<li>/,/g; s/<\/li>//g; s/<a href=?(\"|')[^\"']+?(\"|') title=?(\"|')[^\"']+?(\"|')>//g; s/<\/a>//g; s/, /,/g" > "$author"
        hgrep 'td; a -title /[-][1] @p"%i\n"' "$t1" > "$title"
        hgrep 'td +title @p"%i\n"' "$t1" | sed 's/ .*//; s/[A-Z]/\L&/g;' > "$extension"
        hgrep 'td +title @p"%i\n"' "$t1" | sed 's/.* //' > "$size"
        hgrep 'ul +class="record_mirrors_compact" @p"%i\n"' "$t1" | sed -E 's/^<li><a href="//; s/".*//'  > "$links"
        
        if [ "$COLOR" -eq 1 ]
        then
            color_lines "$C_SIZE" "$size" "$t1"
            color_lines "$C_TITLE" "$title" "$t1"
            color_lines "$C_EXTENSION" "$extension" "$t1"
            color_lines "$C_AUTHOR" "$author" "$t1"
        fi
        paste -d "$DELIM" "$title" "$author" "$size" "$extension" | recode html..UTF-8 | nl
        ;;
    2)
        doi="$(mktemp)"
        volume="$(mktemp)"
        trap 'rm "$doi" "$volume"' EXIT

        curl -s "$DOMAIN/scimag/?q=$SEARCHP&page=$PAGE" | sed 's/<p>volume/volume/' | hgrep 'tbody; tr; td @p"%i\n"' > "$t1"
        sed -E '/^[^<>]+$/!d' "$t1" > "$author"
        hgrep 'p; a @p"%i\n"' "$t1" | sed 'N; s/\n/ - /;' > "$title"
        sed -E '/^[[:space:]]+<p>DOI: [^<>]+<\/p>/!d; s/.*DOI: //; s/<\/p>.*//' "$t1" > "$doi"
        sed '/<\/a>volume.*<\/p>/!d; s/.*volume/volume/; s/<\/p>$//' "$t1" > "$volume"
        sed '/title="edit metadata">/!d; s/<br>.*//' "$t1" > "$size"
        hgrep 'ul @p"%i\n"' "$t1" | sed 's/^<li><a href="//; s/">.*//' > "$links"

        if [ "$COLOR" -eq 1 ]
        then
            color_lines "$C_SIZE" "$size" "$t1"
            color_lines "$C_DOI" "$doi" "$t1"
            color_lines "$C_TITLE" "$title" "$t1"
            color_lines "$C_VOLUME" "$volume" "$t1"
            color_lines "$C_AUTHOR" "$author" "$t1"
        fi
        echo "$DELIM"
        paste -d "$DELIM" "$title" "$volume" "$author" "$doi" "$size" | recode html..UTF-8 | nl
        ;;
esac

printf 'num> '
read -r NUMBER
link="$(sed "s/ /%20/g; ${NUMBER}q;d" "$links")"
if echo "$link" | grep '://sci-hub' -q
then
    echo "$link"
    curl -g -s "$link" | hgrep 'embed @p"%(src)a\n"' | tee /dev/stderr | xclip -sel clip
else
    curl -g -s "$link" | hgrep 'h2; a +href @p"%(href)a\n"' | tee /dev/stderr | xclip -sel clip
fi
